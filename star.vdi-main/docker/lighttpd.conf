###############################################################################
var.basedir  = "/var/www/localhost"
var.logdir   = "/var/log/lighttpd"
var.statedir = "/var/lib/lighttpd"

server.modules = (
    "mod_rewrite",
    "mod_redirect",
    "mod_alias",
    "mod_access",
    "mod_openssl",
#    "mod_cml",
#    "mod_trigger_b4_dl",
#    "mod_auth",
#    "mod_status",
	"mod_setenv",
    "mod_proxy",
#    "mod_simple_vhost",
#    "mod_evhost",
#    "mod_userdir",
    "mod_compress",
#    "mod_ssi",
#    "mod_usertrack",
#    "mod_expire",
#    "mod_secdownload",
#    "mod_rrdtool",
#    "mod_webdav",
    "mod_accesslog",
	"mod_fastcgi"
)

# mimetype mapping
mimetype.assign             = (
  ".pdf"          =>      "application/pdf",
  ".sig"          =>      "application/pgp-signature",
  ".spl"          =>      "application/futuresplash",
  ".class"        =>      "application/octet-stream",
  ".ps"           =>      "application/postscript",
  ".torrent"      =>      "application/x-bittorrent",
  ".dvi"          =>      "application/x-dvi",
  ".gz"           =>      "application/x-gzip",
  ".pac"          =>      "application/x-ns-proxy-autoconfig",
  ".swf"          =>      "application/x-shockwave-flash",
  ".tar.gz"       =>      "application/x-tgz",
  ".tgz"          =>      "application/x-tgz",
  ".tar"          =>      "application/x-tar",
  ".zip"          =>      "application/zip",
  ".mp3"          =>      "audio/mpeg",
  ".m3u"          =>      "audio/x-mpegurl",
  ".wma"          =>      "audio/x-ms-wma",
  ".wax"          =>      "audio/x-ms-wax",
  ".ogg"          =>      "audio/x-wav",
  ".wav"          =>      "audio/x-wav",
  ".gif"          =>      "image/gif",
  ".jpg"          =>      "image/jpeg",
  ".jpeg"         =>      "image/jpeg",
  ".png"          =>      "image/png",
  ".xbm"          =>      "image/x-xbitmap",
  ".xpm"          =>      "image/x-xpixmap",
  ".xwd"          =>      "image/x-xwindowdump",
  ".css"          =>      "text/css",
  ".html"         =>      "text/html",
  ".htm"          =>      "text/html",
  ".js"           =>      "text/javascript",
  ".asc"          =>      "text/plain",
  ".c"            =>      "text/plain",
  ".conf"         =>      "text/plain",
  ".text"         =>      "text/plain",
  ".txt"          =>      "text/plain",
  ".dtd"          =>      "text/xml",
  ".xml"          =>      "text/xml",
  ".mpeg"         =>      "video/mpeg",
  ".mpg"          =>      "video/mpeg",
  ".mov"          =>      "video/quicktime",
  ".qt"           =>      "video/quicktime",
  ".avi"          =>      "video/x-msvideo",
  ".asf"          =>      "video/x-ms-asf",
  ".asx"          =>      "video/x-ms-asf",
  ".wmv"          =>      "video/x-ms-wmv",
  ".bz2"          =>      "application/x-bzip",
  ".tbz"          =>      "application/x-bzip-compressed-tar",
  ".tar.bz2"      =>      "application/x-bzip-compressed-tar"
 )

# include "mime-types.conf"
server.username      = "lighttpd"
server.groupname     = "lighttpd"
server.document-root = "/var/www/"
server.pid-file      = "/var/run/lighttpd.pid"
server.errorlog      = var.logdir  + "/error.log"
server.indexfiles    = ("index.php", "index.html",
						"index.htm", "default.htm")
server.follow-symlink = "enable"
server.port          = 80
server.bind          = "0.0.0.0"
server.use-ipv6 = "disable"
server.h2proto = "enable"
static-file.exclude-extensions = (".php", ".pl", ".cgi", ".fcgi")
accesslog.filename   = var.logdir + "/access.log"
url.access-deny = ("~", ".inc")


$SERVER["socket"] == ":80" {
	$HTTP["scheme"] == "http" {
		$HTTP["host"] =~ ".*" {
            url.redirect = (".*" => "https://%0$0")
        }
        # server.document-root = "/svdi/server/src/static/"
        # $HTTP["url"]  =~ "^/vdi/res/" {
        #     alias.url = ( "/vdi/res/" => "/svdi/server/src/static/")
        #     url.rewrite = ( "^/vdi/res(/.*)?$" => "/vdi/res$1" )
        # } else $HTTP["url"] =~ "^/favicon.ico" {
        #     alias.url = ( "/favicon.ico" => "/svdi/server/src/static/modern/img/favicon.ico")
        # } else $HTTP["url"] =~ ".*" {
        #     proxy.server = ( "" => ("" => ( "socket" => "/run/vdisocket" )))    
        # }
    }
}


$SERVER["socket"] == ":2637" {
	ssl.engine    = "enable"
	ssl.pemfile   = "/etc/lighttpd/server.pem"
    $HTTP["scheme"] == "https" {
    server.document-root = "/svdi/server/src/static/"
        $HTTP["url"] =~ "^/assets/" {
            alias.url = ( "/assets/" => "/svdi/server/src/static/assets/" )
            setenv.add-response-header = ( "Cache-Control" => "public, max-age=31536000, immutable" )
        } else $HTTP["url"] =~ "\.(png|jpg|jpeg|gif|svg|webp|ico|txt)$" {
            alias.url = ( "/" => "/svdi/server/src/static/" )
            setenv.add-response-header = ( "Cache-Control" => "public, max-age=604800" )
        } else $HTTP["url"]  =~ "^/vdi/res/" {
            alias.url = ( "/vdi/res/" => "/svdi/server/src/static/")
            url.rewrite = ( "^/vdi/res(/.*)?$" => "/vdi/res$1" )
        } else $HTTP["url"] =~ "^/favicon.ico" {
            alias.url = ( "/favicon.ico" => "/svdi/server/src/static/modern/img/favicon.ico")
        } else $HTTP["url"] =~ "^/swagger" {
            alias.url = ( "/swagger" => "/svdi/server/src/swagger/")
            url.rewrite = ( "^/swagger(/.*)?$" => "/swagger$1" )
        } else $HTTP["url"] =~ ".*" {
            proxy.server = ( "" => ("" => ( "socket" => "/run/vdisocket" )))    
        }
    }
}



# {{{ debug
debug.log-request-header   = "enable"
debug.log-response-header  = "enable"
debug.log-request-handling = "enable"
debug.log-file-not-found   = "enable"
# }}}